When would you want to use a remote repository rather than keeping
all your work local?

You may want to share your work, or give multiple contributers access.

Why might you want to always pull changes manually 
rather than having Git automatically stay up-to-date 
with your remote repository?

That may get really confusing if the code is constantly
changing. It's easier to work on one unit of code before
updating everything - easier for collaboration on
different parts of the project.

Describe the differences between forks, clones, and 
branches. When would you use one instead of another?

Fork is when you want to copy someone else's GitHub
repository to your GitHub. Clone is when you want to
copy a repository from GitHub to your local machine, 
or copy a repository from local to local. Branch would
be creating a branch within the repository.

What is the benefit of having a copy of the last known state 
of the remote stored locally?

You can see all the most recent changes offline while
you still work on your local copy. Then when you are 
ready you can merge remote with local.

How would you collaborate without using Git or GitHub? 
What would be easier, and what would be harder?

You would have to send or post your code somewhere else,
or even speak directly with the other collaborators which
would be hard to schedule and waste a lot of time. The 
GitHub pull requests can be reviewed, commented, updated
at any time.

When would you want to make changes in a separate branch 
rather than directly in master? What benefits does each 
approach have?

Use a separate branch if you are not sure about the
changes and want to have them reviewed. If you're the 
owner of a project, you may just make changes in master
which is much easier with less steps.

